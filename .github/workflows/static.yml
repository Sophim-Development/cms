# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist

      - name: Build Static Site
        run: |
          mkdir -p dist
          # Pre-render routes to HTML using a build script or direct PHP calls
          php public/index.php > dist/index.html  # Render root route
          php public/index.php about > dist/about.html  # Render /about
          php public/index.php contact > dist/contact.html  # Render /contact
          php public/index.php services > dist/services.html  # Render /services
          php public/index.php logout > dist/logout.html  # Render /logout
          php public/index.php user/login > dist/user/login.html  # Render /user/login
          php public/index.php user/book-appointment > dist/user/book-appointment.html  # Render /user/book-appointment
          php public/index.php user/register > dist/user/register.html  # Render /user/register
          php public/index.php user/get_doctors > dist/user/get_doctors.html  # Render /user/get_doctors
          php public/index.php admin/login > dist/admin/login.html  # Render /admin/login
          php public/index.php admin/dashboard > dist/admin/dashboard.html  # Render /admin/dashboard
          php public/index.php admin/manage-doctors > dist/admin/manage-doctors.html  # Render /admin/manage-doctors
          php public/index.php doctor/login > dist/doctor/login.html  # Render /doctor/login
          php public/index.php doctor/dashboard > dist/doctor/dashboard.html  # Render /doctor/dashboard
          php public/index.php doctor/appointments > dist/doctor/appointments.html  # Render /doctor/appointments
          cp -r public/assets/ dist/assets/  # Copy assets to dist
        env:
          DB_HOST: localhost
          DB_NAME: hms_db
          DB_USER: root
          DB_PASSWORD: root

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'dist'  # Upload the built static files

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
